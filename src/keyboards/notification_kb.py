from aiogram import types, Dispatcher
from magic_filter import F
from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder


class NotificationsFab(CallbackData, prefix="noteFab"):
    """–§–∞–±—Ä–∏–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    action: str


def get_keyboard():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥—Ä—É–ø–ø–∞–º–∏ –∏ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"""
    builder = InlineKeyboardBuilder()

    builder.button(text="üîï –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –Ω–∞ —Ç–µ–∫—É—â–µ–π –Ω–µ–¥–µ–ª–µ [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]",
                   callback_data=NotificationsFab(action="---"))
    builder.button(text="üîï –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]",
                   callback_data=NotificationsFab(action="---"))
    builder.button(text="üîï –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –ø–∞—Ä–∞—Ö –Ω–∞ —Å–µ–≥–æ–¥–Ω—è [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]",
                   callback_data=NotificationsFab(action="---"))
    builder.button(text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é",
                   callback_data=NotificationsFab(action="pressed_back"))

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    builder.adjust(1)

    return builder.as_markup()
