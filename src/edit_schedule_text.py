def get_line_schedule_teacher(num_lesson, place, groups, lesson, lesson_type):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    return get_num_lesson(num_lesson) + get_emoji(lesson_type) + lesson_type + ' [' + place + '] ' + groups + ' ' + lesson + '\n'


def get_line_schedule_group(num_lesson, place, teacher, lesson, lesson_type):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –≥—Ä—É–ø–ø—ã"""
    return get_num_lesson(num_lesson) + get_emoji(lesson_type) + lesson_type + ' [' + place + '] ' + lesson + ', ' + teacher + '\n'


def get_num_lesson(num_lesson):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä –ø–∞—Ä—ã –≤ –≤–∏–¥–µ —ç–º–æ–¥–∑–∏"""
    return chr(0x0030 + num_lesson) + '\uFE0F' + chr(0x20E3)


def get_full_day_name(user_day):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏"""
    full_days = ['–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö', '–í–¢–û–†–ù–ò–ö', '–°–†–ï–î–ê', '–ß–ï–¢–í–ï–†–ì', '–ü–Ø–¢–ù–ò–¶–ê', '–°–£–ë–ë–û–¢–ê', '–í–û–°–ö–†–ï–°–ï–ù–¨–ï']
    days = ['–ü–ù', '–í–¢', '–°–†', '–ß–¢', '–ü–¢', '–°–£–ë', '–í–°']
    return '\nüîπ *' + full_days[days.index(user_day)] + ':*\n'


def get_emoji(lesson_type):
    if lesson_type == '–õ–µ–∫—Ü–∏—è':
        return u'üí¨'
    if lesson_type == '–ü—Ä–∞–∫—Ç–∏–∫–∞':
        return u'üìù'
    if lesson_type.startswith('–õ–∞–±'):
        if '1' in lesson_type:
            return u'üî¨' + u'‚ûä '
        if '2' in lesson_type:
            return u'üî¨' + u'‚ûã '
        return u'üî¨'
    return u'üî•'


def form_schedule_teacher(table, target):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""
    lesson = table.query(f'–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å == @target').iterrows()
    index, prev_row = next(lesson)
    prev_day = str(prev_row['–î–µ–Ω—å'])
    list_groups = prev_row['–ì—Ä—É–ø–ø–∞']

    out_text = get_full_day_name(prev_row['–î–µ–Ω—å'])
    repeat = False
    while True:
        try:
            index, row = next(lesson)
            if (row['–ü–∞—Ä–∞'] == prev_row['–ü–∞—Ä–∞']) and (str(row['–î–µ–Ω—å']) == prev_day):
                list_groups = list_groups + ', ' + row['–ì—Ä—É–ø–ø–∞']
                repeat = True
            else:
                if not repeat:
                    list_groups = prev_row['–ì—Ä—É–ø–ø–∞']
                    # repeat = False
                out_text = out_text + get_line_schedule_teacher(prev_row['–ü–∞—Ä–∞'],
                                                                prev_row['–ê—É–¥–∏—Ç–æ—Ä–∏—è'],
                                                                list_groups,
                                                                prev_row['–ü—Ä–µ–¥–º–µ—Ç'],
                                                                prev_row['–¢–∏–ø'])
                if str(row['–î–µ–Ω—å']) != prev_day:
                    t = get_full_day_name(row['–î–µ–Ω—å'])
                    out_text = out_text + t

                repeat = False
                list_groups = row['–ì—Ä—É–ø–ø–∞']

            prev_day = str(row['–î–µ–Ω—å'])
            prev_row = row
        except StopIteration:
            break
    out_text = out_text + get_line_schedule_teacher(prev_row['–ü–∞—Ä–∞'],
                                                    prev_row['–ê—É–¥–∏—Ç–æ—Ä–∏—è'],
                                                    list_groups,
                                                    prev_row['–ü—Ä–µ–¥–º–µ—Ç'],
                                                    prev_row['–¢–∏–ø'])
    return out_text


def form_schedule_group(table, target):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã"""
    prev_row = ''
    out_text = ''
    for index, row in table.query('–ì—Ä—É–ø–ø–∞ == @target').iterrows():
        if prev_row != row['–î–µ–Ω—å']:
            out_text = out_text + get_full_day_name(row['–î–µ–Ω—å'])
        out_text = out_text + get_line_schedule_group(row['–ü–∞—Ä–∞'],
                                                      row['–ê—É–¥–∏—Ç–æ—Ä–∏—è'],
                                                      row['–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'],
                                                      row['–ü—Ä–µ–¥–º–µ—Ç'],
                                                      row['–¢–∏–ø'])
        prev_row = row['–î–µ–Ω—å']
    return out_text
