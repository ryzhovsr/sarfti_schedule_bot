from vkbottle import Keyboard, Callback, GroupEventType
from vkbottle.bot import Bot, Message, MessageEvent

from schedule_data import ScheduleData
from vk_userdb import UserDatabase

token = "vk1.a.j8Yt1zZf7KLV75zluh9yXUmfoqE_lbgWZzX9xZaHgvm6kO8C96_ah-l7NXqBakFgzimC8AuMw0Fq0M4KbGQFUjzLrT3DtsFW8yHtdTSWbZY9JP2OhF12OVUwLVN_7ddkj7yxQdNFh-pgatYgWLzSvcA-2SrnG04jvADcNMmg-eUSEXW3j9kEmu3unAwnx2JcrqnY0DgpV1bmyzWEIFRoLA"
bot = Bot(token)
sch = ScheduleData()
user_db = UserDatabase()


async def send_initial_menu(peer_id):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é"""
    user = await bot.api.users.get(peer_id)

    keyboard = (
        Keyboard(inline=True)
        .add(Callback("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è", {"initial_menu": "teacher"}))
        .add(Callback("–°—Ç—É–¥–µ–Ω—Ç–∞", {"initial_menu": "student"}))
        .row()
        .add(Callback("–ò–Ω—Ñ–æ", {"info": "info"}))
    ).get_json()

    text = f'–ü—Ä–∏–≤–µ—Ç, {user[0].first_name} {user[0].last_name}!üëã\n –ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å?'

    return keyboard, text


@bot.on.private_message(text=["–ù–∞—á–∞—Ç—å", "/start", "–ü—Ä–∏–≤–µ—Ç"])
async def handle_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard, text = await send_initial_menu(message.peer_id)
    message_from_bot = await message.answer(message=text, keyboard=keyboard)
    # –û–±–Ω–æ–≤–ª—è–µ–º id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_db.update_user_message_id(message_from_bot)


@bot.on.raw_event(GroupEventType.MESSAGE_EVENT, dataclass=MessageEvent)
async def message_event_handler(event: MessageEvent):
    """–û—Ç–ª–æ–≤ callback"""
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    peer_id = event.peer_id
    # –ü–æ–ª—É—á–∞–µ–º id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    message_id = user_db.get_last_message_id(peer_id)

    callback = list(event.payload.keys())[0]

    if callback == "info":
        if event.payload[callback] == "info":
            await event.show_snackbar("–ë–æ—Ç–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µüôÉ")

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    if callback == "initial_menu":
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
        to_selection = Callback("–í–µ—Ä–Ω—É—Ç—Å—è –∫ –≤—ã–±–æ—Ä—É", {"initial_menu": "to_selection"})
        keyboard = Keyboard(inline=True).add(to_selection).get_json()

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
        if event.payload[callback] == "teacher":
            await bot.api.messages.edit(peer_id=peer_id, message_id=message_id, message="–í–≤–µ–¥–∏—Ç–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:",
                                        keyboard=keyboard)

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°—Ç—É–¥–µ–Ω—Ç"
        if event.payload[callback] == "student":
            await bot.api.messages.edit(peer_id=peer_id, message_id=message_id, message="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:",
                                        keyboard=keyboard)

        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—Å—è –∫ –≤—ã–±–æ—Ä—É"
        if event.payload[callback] == "to_selection":
            keyboard, text = await send_initial_menu(peer_id)
            await bot.api.messages.edit(peer_id=peer_id, message_id=message_id, message=text,
                                        keyboard=keyboard)


if __name__ == "__main__":
    bot.run_forever()
