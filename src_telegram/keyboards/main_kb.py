from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src_telegram.create import user_db


class MainFab(CallbackData, prefix="mainFab"):
    """–§–∞–±—Ä–∏–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    action: str


def get_keyboard(user_id: int):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥—Ä—É–ø–ø–∞–º–∏ –∏ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"""
    builder = InlineKeyboardBuilder()

    builder.button(text="üîº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é", callback_data=MainFab(action="pressed_current_week_sch"))
    builder.button(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–∏–µ –Ω–µ–¥–µ–ª–∏", callback_data=MainFab(action="pressed_other_week_sch"))

    if user_db.is_user_notification_enabled(user_id):
        builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è [–≤–∫–ª]", callback_data=MainFab(action="pressed_notifications"))
    else:
        builder.button(text="üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è [–≤—ã–∫–ª]", callback_data=MainFab(action="pressed_notifications"))

    builder.button(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data=MainFab(action="pressed_back"))

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    builder.adjust(1)

    return builder.as_markup()
