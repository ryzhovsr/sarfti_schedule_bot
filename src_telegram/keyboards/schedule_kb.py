from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import Optional


class ScheduleFab(CallbackData, prefix="schFab"):
    """–§–∞–±—Ä–∏–∫–∞ –∫–æ–ª–±—ç–∫–æ–≤ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    action: str
    selected_week: Optional[int] = None


def get_keyboard(selected_week: int = None):
    builder = InlineKeyboardBuilder()

    builder.button(text="‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data=ScheduleFab(action="pressed_info", selected_week=selected_week))
    builder.button(text="üïò –ü–∞—Ä—ã", callback_data=ScheduleFab(action="pressed_time", selected_week=selected_week))

    if selected_week is not None:
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=ScheduleFab(action="pressed_back", selected_week=selected_week))

    builder.button(text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data=ScheduleFab(action="pressed_back_to_main"))

    builder.adjust(2)

    return builder.as_markup()


def get_keyboard_after_press_time(selected_week: int = None):
    builder = InlineKeyboardBuilder()

    builder.button(text="‚ùì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data=ScheduleFab(action="pressed_info", selected_week=selected_week))

    if selected_week is not None:
        builder.button(text="üîº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data=ScheduleFab(action="pressed_other_schedule",
                                                                      selected_week=selected_week))
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=ScheduleFab(action="pressed_back", selected_week=selected_week))
    else:
        builder.button(text="üîº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
                       callback_data=ScheduleFab(action="pressed_schedule", selected_week=selected_week))

    builder.button(text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data=ScheduleFab(action="pressed_back_to_main"))

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    builder.adjust(2)

    return builder.as_markup()


def get_keyboard_after_press_info(selected_week: int = None):
    builder = InlineKeyboardBuilder()

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é –∏–ª–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ
    if selected_week is not None:
        builder.button(text="üîº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
                       callback_data=ScheduleFab(action="pressed_other_schedule", selected_week=selected_week))
    else:
        builder.button(text="üîº –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ",
                       callback_data=ScheduleFab(action="pressed_schedule", selected_week=selected_week))

    builder.button(text="üïò –ü–∞—Ä—ã", callback_data=ScheduleFab(action="pressed_time", selected_week=selected_week))

    if selected_week is not None:
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=ScheduleFab(action="pressed_back", selected_week=selected_week))

    builder.button(text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data=ScheduleFab(action="pressed_back_to_main"))

    # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    builder.adjust(2)

    return builder.as_markup()
